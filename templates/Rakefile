require 'fog'
require 'rake'
require 'rspec/core/rake_task'
require 'pipely/tasks'
require_relative 'lib/template'

RSpec::Core::RakeTask.new do |t|
  t.pattern = File.join(File.dirname(__FILE__), 'spec', '**', '*_spec.rb')
end

template = Template.new
environment = ENV['env'] || 'staging'

definition = Pipely::Build.build_definition(
  template,
  environment,
  File.join(File.dirname(__FILE__), 'config', 'config.yml')
)

Pipely::Tasks::UploadSteps.new do |t|
  t.s3_path = definition.s3_prefix
  t.s3_bucket_name = definition.s3_path_builder.steps_bucket
  t.local_path = File.join(File.dirname(__FILE__), 'steps')
end

Pipely::Tasks::Deploy.new(:deploy, :when) do |t, args|
  template.run_now = true if args[:when] == 'now'
  t.definition = definition
end

Pipely::Tasks::Graph.new do |t|
  t.definition = definition
end

Pipely::Tasks::Definition.new(:definition, :when) do |t, args|
  template.run_now = true if args[:when] == 'now'
  t.definition = definition
end

namespace :build do
  desc "Copy pipeline definitions to dist/"
  task :dist do
    dist_dir = File.join(File.dirname(__FILE__), 'dist')
    mkdir_p(dist_dir)

    Rake::Task["definition"].invoke(dist_dir)
  end

  desc "Run all tests for CI"
  task :continuous => [:spec, :dist]
end

task :default => :spec
